##############################################################################
# Development environment buildout
##############################################################################

[buildout]
parts =
    instance
    test
    coverage-report
    omelette
    zopepy
    checkversions

extends =
    packages.cfg

# Make sure buildout always attempts to update packages
always-checkout = force

# Development Zope instance. Installs the ``bin/instance`` script
[instance]
recipe = plone.recipe.zope2instance
http-address = 8080
user = admin:admin
verbose-security = on
eggs =
    ${eggs:main}
    ${eggs:devtools}

# Test runner. Installs the ``bin/test`` script
[test]
recipe = zc.recipe.testrunner
eggs = ${eggs:test}
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']

# Coverage report generator. Run ``bin/test --coverage=coverage`` and then ``bin/coveragereport``
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('parts/test/coverage', 'coverage')

# Installs symbolic links for all installed packages to parts/omelette.
# On Windows, you need to install junction.exe first if you want to use this.
[omelette]
recipe = collective.recipe.omelette
eggs = 
    ${eggs:main}
    ${eggs:devtools}

# Interpreter. Installs the ``bin/zopepy`` script.
[zopepy]
recipe = zc.recipe.egg
eggs = 
    ${eggs:main}
    ${eggs:devtools}
interpreter = zopepy

# Tool to help check for new versions. Run ``bin/checkversions versions.cfg``
[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]
